<div class="container-image">
  <div class="box">
     @Content
    <div class="overlay-container" @onclick=@OverlayClick>
      <div class="content-hover-overlay">
        <img class="icon" width="64" height="64" src=@SrcIconOverlay />
        <span>@TitleOverlay</span>
      </div>
    </div>
  </div>
</div>

<style>
  .container-image {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: lightgray;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    border: 2px dashed #afafaf;
  }

  .container-image .box {
    position: relative;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: lightgray;
    width: 100%;
  }

  .container-image .box .overlay-container {
    z-index: 20;
    position: absolute;
    top: 0%;
    left: 0%;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 0, 0, 0.9);
    color: black;
  }

  .container-image .box .overlay-container .content-hover-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    transform: translate(-50%, -50%);
  }

  .container-image .box .overlay-container .content-hover-overlay span {
    color: #ddd;
    font-size: xx-large;
    font-weight: 500;
  }

  .container-image .box .overlay-container .content-hover-overlay .icon {
    filter: brightness(0) invert(0.8);
    fill: #ddd;
  }

  .container-image .box .overlay-container {
    display: none;
  }

  .container-image .box:hover {
    opacity: 0.5;
  }

  .container-image .box:hover .overlay-container {
    display: block;
  }
</style>

<style>
    @KeyframesStyle
</style>

@code {

    [Parameter]
    public RenderFragment Content { get; set; } = default!;

    [Parameter]
    public string SrcIconOverlay { get; set; } = string.Empty;

    [Parameter]
    public string TitleOverlay { get; set; } = string.Empty;

    [Parameter]
    public EventCallback OverlayEvent { get; set; }

    public Task OverlayClick()
    {
        return OverlayEvent.InvokeAsync();
    }
    private string KeyframesStyle => $@"

@media (max-width: 920px) {{

    .box {{

        max-width : 250px;
        max-height: 250px;
        height: 250px;
    }}

}}

@media (min-width: 920px) {{


      .box {{

        max-width : 400px;
        max-height: 400px;
        height: 400px;
    }}
}}
    ";
 
}
